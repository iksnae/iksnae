<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="800" height="600" styleName="MainViewCanvasStyle" xmlns:ns1="components.*" initialize="init()" horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:states>
		<mx:State name="calendar">
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">

				
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="calendar" styleName="SectionHeader"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Canvas width="100%" height="200" verticalScrollPolicy="off" horizontalScrollPolicy="off" id="canvas2">
					<mx:HBox x="0" y="0" width="100%" height="100%">
						<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off" width="100%" height="100%">
							<mx:Label text="Current Event" width="100%" styleName="SelectedViewTitle" id="current_event_title"/>
							<mx:TextArea width="100%" height="100%" id="current_event_description" styleName="SelectedDescriptionText" horizontalScrollPolicy="off" verticalScrollPolicy="auto"/>
						</mx:VBox>
						<ns1:GroopCalendarComponent width="200" height="100%" id="myCalendar"/>
					</mx:HBox>
				</mx:Canvas>
			</mx:AddChild>
			<mx:SetProperty target="{vbox1}" name="horizontalScrollPolicy" value="off"/>
			<mx:SetProperty target="{vbox1}" name="verticalScrollPolicy" value="off"/>
			<mx:SetStyle target="{vbox2}" name="backgroundColor" value="#4D4D4D"/>
			<mx:SetProperty name="height" value="100%"/>
			<mx:SetProperty name="width" value="100%"/>
			<mx:SetProperty target="{calendar_btn}" name="enabled" value="false"/>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:DataGrid width="100%" height="100%" dataProvider="{ google.gCalAPI.calendars }" styleName="CalenderList" showHeaders="false" change="{onCalendarSelected()}" itemRenderer="components.CalendarEntryItemRenderer">
				<mx:columns>
					<mx:DataGridColumn dataField="title" width="200"/>
				</mx:columns>
					
				</mx:DataGrid>
			</mx:AddChild>
			<mx:SetStyle target="{canvas1}" name="right" value="284"/>
			<mx:SetProperty target="{vbox2}" name="width" value="266"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:DataGrid id="bottomList" width="100%" height="100%" dataProvider="{ google.gCalAPI.currentCalendar.events }" styleName="CalenderList" showHeaders="false" updateComplete="{ myCalendar.populate(new ArrayCollection(bottomList.dataProvider as Array))}" change="onEventSelected()">
				<mx:columns>
					<mx:DataGridColumn dataField="title" width="200"/>
				</mx:columns>
					
				</mx:DataGrid>
			</mx:AddChild>
			<mx:SetProperty target="{vbox1}" name="maxWidth" value="300"/>
		</mx:State>
		<mx:State name="mail">
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="mail" styleName="SectionHeader" id="label1"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:VDividedBox width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off" id="vdividedbox1">
					<mx:HTML width="100%" id="html1" height="50%" styleName="CalenderList"/>
					<mx:DataGrid width="100%" height="50%" id="datagrid1" styleName="CalenderList" dataProvider="{google.gCalAPI.currentCalenderDate}">
						
					</mx:DataGrid>
					
				</mx:VDividedBox>
			</mx:AddChild>
			<mx:SetStyle target="{vbox1}" name="bottom" value="20"/>
			<mx:AddChild relativeTo="{canvas1}" position="lastChild">
				<mx:Label x="0" y="563" text="Label" styleName="FooterLabel"/>
			</mx:AddChild>
			<mx:SetProperty target="{canvas1}" name="horizontalScrollPolicy" value="off"/>
			<mx:SetProperty target="{canvas1}" name="verticalScrollPolicy" value="off"/>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:Button label="compose" width="100%" styleName="SideNavButtonStyle" id="button2" click="showCompose()"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:Button label="folders" width="100%" styleName="SideNavButtonStyle" id="button1"/>
			</mx:AddChild>
			<mx:SetProperty target="{mail_btn}" name="enabled" value="false"/>
		</mx:State>
		<mx:State name="compose" basedOn="mail">
			<mx:RemoveChild target="{html1}"/>
			<mx:RemoveChild target="{datagrid1}"/>
			<mx:RemoveChild target="{vdividedbox1}"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:RichTextEditor height="100%" width="100%" showToolTips="true" color="#000000" showControlBar="true" themeColor="#000000" borderColor="#000000" fontSize="12">
				</mx:RichTextEditor>
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:Button label="send" width="100%" styleName="SideNavButtonStyle"/>
			</mx:AddChild>
			<mx:RemoveChild target="{button2}"/>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:Button label="save" width="100%" styleName="SideNavButtonStyle" id="button0"/>
			</mx:AddChild>
			<mx:RemoveChild target="{button1}"/>
			<mx:AddChild relativeTo="{vbox2}" position="lastChild">
				<mx:Button label="delete" width="100%" styleName="SideNavButtonStyle" id="button3"/>
			</mx:AddChild>
			<mx:SetProperty target="{label1}" name="text" value="mail.compose"/>
		</mx:State>
		<mx:State name="messages">
			<mx:SetProperty target="{message_btn}" name="enabled" value="false"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="messages" styleName="SectionHeader"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="tasks">
			<mx:SetProperty target="{tasks_btn}" name="enabled" value="false"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="tasks" styleName="SectionHeader"/>
			</mx:AddChild>
			<mx:SetStyle target="{vbox3}" name="bottom" value="30"/>
			<mx:SetStyle target="{canvas1}" name="bottom" value="30"/>
			<mx:SetStyle target="{vbox2}" name="bottom" value="30"/>
			<mx:AddChild position="lastChild">
				<mx:HBox height="30" bottom="0" right="10" left="10" id="status_bar" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<mx:Text text="Text" styleName="FooterText"/>
				</mx:HBox>
			</mx:AddChild>
		</mx:State>
		<mx:State name="files">
			<mx:SetProperty target="{files_btn}" name="enabled" value="false"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="files" styleName="SectionHeader"/>
			</mx:AddChild>
		</mx:State>
		<mx:State name="buy">
			<mx:SetProperty target="{files_btn}" name="enabled" value="false"/>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<mx:Label text="buy" styleName="SectionHeader"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{vbox1}" position="lastChild">
				<ns1:GroopCheckoutComponent width="100%">
				</ns1:GroopCheckoutComponent>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Label text="groop" top="10" left="10" styleName="HeaderLabel"/>
	<mx:VBox width="150" left="10" bottom="35" top="49" verticalGap="0" id="vbox3">
		<mx:Button label="calendar" width="150" styleName="SideNavButtonStyle" id="calendar_btn" click="showCalendar()"/>
		<mx:Button label="mail" width="150" styleName="SideNavButtonStyle" id="mail_btn" click="showMail()"/>
		<mx:Button label="messages" styleName="SideNavButtonStyle" width="150" id="message_btn" click="showMessages()"/>
		<mx:Button label="tasks" styleName="SideNavButtonStyle" width="150" id="tasks_btn" click="showTasks()"/>
		<mx:Button label="files" styleName="SideNavButtonStyle" width="150" id="files_btn" click="showFiles()"/>
		<mx:Button label="buy" styleName="SideNavButtonStyle" width="150" id="buy_btn0" click="showBuy()"/>
	</mx:VBox>
	<mx:Canvas top="10" left="166" right="168" bottom="35" id="canvas1">
	<mx:VBox left="0" right="0" bottom="0" top="0" id="vbox1">
    </mx:VBox>
	</mx:Canvas>
	<mx:VBox width="150" right="10" bottom="35" top="30" id="vbox2">
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import com.iksnae.webapi.google.gcal.GoogleCalendarAPI;
			import com.iksnae.webapi.google.GoogleService;
			import com.adobe.xml.syndication.atom.Entry;
			import com.adobe.xml.syndication.Namespaces;
			import mx.collections.ArrayCollection;
			import com.iksnae.groop.model.services.GroopCalendarService;
			import com.iksnae.groop.model.services.GroopCheckoutService;
			import com.iksnae.groop.model.services.GroopServiceEvent;
		
			
			[Bindable]
		    public var google:GoogleService = GoogleService.getInstance();
		    
		    // make room for our "Buy" component
		    private var buyMe:GroopCheckoutService = GroopCheckoutService.getInstance();
			
			private function showCalendar():void{
				currentState = 'calendar';
			}
			private function showMail():void{
                currentState = 'mail';
            }
            private function showCompose():void{
                currentState = 'compose';
            }
            private function showFiles():void{
                currentState = 'files';
            }
            private function showTasks():void{
                currentState = 'tasks';
            }
            private function showMessages():void{
                currentState = 'messages';
            }
             private function showBuy():void{
             	trace("MainView = showBuy()");
                currentState = 'buy';
                buyMe.open();
            }
            private function init():void{
            	
            }
            
            
            private function onCalendarSelected():void{
            	
            }
           
            private function onEventSelected():void{
            	
            	current_event_title.text = bottomList.selectedItem.title;
            	current_event_description.text = Entry(bottomList.selectedItem).content.value;
            	myCalendar.selectedDate = Entry(bottomList.selectedItem).published;
            	
            }
		]]>
	</mx:Script>
	<ns1:ConnectionStatus left="10" width="622" height="17" bottom="0" fontSize="11">
	</ns1:ConnectionStatus>
	<mx:transitions>
    <!-- Play for a change to the login view state from any view state. -->
    <mx:Transition fromState="*" toState="*">
        <mx:Parallel id="t1" targets="{[vbox1,vbox2,vbox3]}">
	        <mx:Move duration="400"/>
	        <mx:Resize duration="400"/>
	    </mx:Parallel>
	
    </mx:Transition>
</mx:transitions>
	
</mx:Canvas>
